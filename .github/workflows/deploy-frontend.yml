name: Deploy Frontend
run-name: ${{ github.actor }} is deploying (AWS CloudFront)  ðŸš€
on:
  workflow_run:
    workflows: ["Deploy Backend"]
    types: [completed]
jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      startsWith(github.ref, 'refs/heads/deploy/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
  
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Extract Environment from Branch Name
        id: extract_env
        run: echo "ENV_NAME=${GITHUB_REF#refs/heads/deploy/}" >> $GITHUB_ENV
        
      - name: Install Dependencies
        run: npm install

      - name: Set up Environment Variables
        run: |
          if [ "${{ env.ENV_NAME }}" == "test" ]; then
            echo "API_URL=${{ secrets.API_URL_TEST }}" >> $GITHUB_ENV
            echo "API_URL_AUTH=${{ secrets.API_URL_AUTH_TEST }}" >> $GITHUB_ENV
            echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME_TEST }}" >> $GITHUB_ENV
            echo "CLOUDFRONT_DISTRIBUTION_ID=${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_TEST }}" >> $GITHUB_ENV
          elif [ "${{ env.ENV_NAME }}" == "prod" ]; then
            echo "API_URL=${{ secrets.API_URL_PROD }}" >> $GITHUB_ENV
            echo "API_URL_AUTH=${{ secrets.API_URL_AUTH_PROD }}" >> $GITHUB_ENV
            echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME_PROD }}" >> $GITHUB_ENV
            echo "CLOUDFRONT_DISTRIBUTION_ID=${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_PROD }}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Build Project
        run: npm run generate:${{ env.ENV_NAME }}

      - name: Deploy to S3
        run: |
          aws s3 sync .output/public/ s3://${{ env.S3_BUCKET_NAME }} --region us-east-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --region us-east-1 --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Post-deployment Notification
        run: echo "Deployment to ${{ env.ENV_NAME }} environment completed. Status is ${{ job.status }}"
  deploy-frontend-fail:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'
      
