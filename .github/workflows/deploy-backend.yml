name: Deploy Backend, then FrontEnd
run-name: ${{ github.actor }} is deploying to AWS  ðŸš€
on:
  push:
    branches:
      - deploy/*

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/deploy/test' && 'test' || github.ref == 'refs/heads/deploy/prod' && 'prod' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Log GitHub Environment Name and other things
        run: |
          echo "GitHub Environment: ${{ github.environment }}"
          echo "CLOUDFRONT_LOGIN: ${{ secrets.CLOUDFRONT_LOGIN }}"
          echo "CLOUDFRONT_PW: ${{ secrets.CLOUDFRONT_PW }}"
          echo "SECRET_TEST: ${{ secrets.SECRET_TEST }}"
          echo "OPEN_AI_KEY: ${{ secrets.OPEN_AI_KEY }}"

      - name: Set Environment Name
        id: set-env
        run: echo "ENV_NAME=${GITHUB_REF#refs/heads/deploy/}" >> $GITHUB_ENV

      - name: Get CloudFront ID
        id: get-cloudfront-id
        run: |
          CLOUDFRONT_DISTRIBUTION_ID=$(aws cloudformation describe-stack-resources --stack-name ${{ secrets.PROJECT_NAME }}-stack-${{ env.ENV_NAME }} --region us-east-1 --query "StackResources[?ResourceType=='AWS::CloudFront::Distribution'].PhysicalResourceId" --output text)
          echo "CLOUDFRONT_DISTRIBUTION_ID=$CLOUDFRONT_DISTRIBUTION_ID" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get CloudFront URL
        id: get-cloudfront-url
        # use Distribution.DomainName below if no custom domain set
        run: |
          CLOUDFRONT_URL=$(aws cloudfront get-distribution --id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --query "Distribution.DistributionConfig.Aliases.Items[0]" --region us-east-1 --output text)
          echo "CLOUDFRONT_URL=$CLOUDFRONT_URL" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get CERTIFICATE_ARN
        id: get-certificate-arn
        run: |
          CERTIFICATE_ARN=$(aws acm list-certificates --query "CertificateSummaryList[?DomainName=='*.illusha.net'].CertificateArn" --output text --region us-east-1)
          echo "CERTIFICATE_ARN=$CERTIFICATE_ARN" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get SQS Url
        id: get-sqs-url
        run: |
          SQS_URL=$(aws sqs get-queue-url --queue-name ${{ secrets.PROJECT_NAME }}--sqs--${{ env.ENV_NAME }} --region us-east-1 --output text)
          echo "SQS_URL=$SQS_URL" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Install CDK Dependencies
      #   run: npm install
      #   working-directory: backend_cdk

  #     - name: Install CDK Globally
  #       run: npm install -g aws-cdk

  #     - name: Install Lambda Function Dependencies
  #       run: npm install
  #       working-directory: backend_cdk/lib/layers/layer-lambda/nodejs # install deps for lambda layers

  #     - name: Deploy CloudFormation Template
  #       env:
  #         OPEN_AI_KEY: ${{ secrets.OPEN_AI_KEY }}
  #         PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         ENV_NAME: ${{ env.ENV_NAME }}
  #         CLOUDFRONT_URL: ${{ env.CLOUDFRONT_URL }}
  #         CLOUDFRONT_LOGIN: ${{ secrets.CLOUDFRONT_LOGIN }}
  #         CLOUDFRONT_PW: ${{ secrets.CLOUDFRONT_PW }}
  #         SQS_URL: ${{ env.SQS_URL }}
  #       run: cdk deploy --require-approval never
  #       working-directory: backend_cdk
  # call-deploy-frontend:
  #   needs: [deploy-backend]
  #   name: call-deploy-frontend
  #   uses: ./.github/workflows/deploy-frontend.yml
  #   secrets: inherit